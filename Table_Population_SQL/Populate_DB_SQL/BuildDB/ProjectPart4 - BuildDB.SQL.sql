------ ALTERING TABLES TO DROP ALL CONSTRAINTS -------

ALTER TABLE CUSTOMER DROP CONSTRAINT COURSEINF_CUSTOMER_courseId_FK;
ALTER TABLE CREDIT_RESERVATION_BRIDGE DROP CONSTRAINT CRBRIDGE_ReserveId_FK;
ALTER TABLE CREDIT_RESERVATION_BRIDGE DROP CONSTRAINT CRBRIDGE_CardNumber_FK;
ALTER TABLE CUSTOMER_COURSE_BRIDGE DROP CONSTRAINT COURSE_CUSTCOURSEBRIDGE_FK;
ALTER TABLE CUSTOMER_COURSE_BRIDGE DROP CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_FK;
ALTER TABLE PROMO_CODE DROP CONSTRAINT REWARDS_PROMO_rewardsId_FK;
ALTER TABLE FOREEVER_REWARDS DROP CONSTRAINT FREWARDS_customerId_FK;
ALTER TABLE PROMO_CODE DROP CONSTRAINT RESERVATION_PROMO_reservationId_FK;
ALTER TABLE CUSTOMER_REVIEW DROP CONSTRAINT CUSTOMER_CREVIEW_customerId_FK;
ALTER TABLE CUSTOMER_REVIEW DROP CONSTRAINT COURSEINFORMATION_CREVIEW_courseId_FK;
ALTER TABLE RESERVATION DROP CONSTRAINT TEETIME_RESERVE_teeTime_FK;
ALTER TABLE RESERVATION DROP CONSTRAINT CUSTOMER_RESERVE_customerId_FK;
ALTER TABLE CREDIT_CARD DROP CONSTRAINT CCARD_customerId_FK;
ALTER TABLE TEE_TIMES DROP CONSTRAINT COURSINF_TTIME_courseId_FK;

------- DROPPING ALL TABLES ------

DROP TABLE FOREEVER_REWARDS;
DROP TABLE PROMO_CODE;
DROP TABLE CUSTOMER_REVIEW;
DROP TABLE CREDIT_RESERVATION_BRIDGE;
DROP TABLE RESERVATION;
DROP TABLE CREDIT_CARD;
DROP TABLE CUSTOMER_COURSE_BRIDGE;
DROP TABLE CUSTOMER;
DROP TABLE TEE_TIMES;
DROP TABLE COURSE_INFORMATION;

-------- CREATING ALL TABLES ----------

CREATE TABLE COURSE_INFORMATION(
course_id NUMBER(10) PRIMARY KEY
CONSTRAINT COURSINF_courseId_NN NOT NULL,
course_name VARCHAR2(60)
CONSTRAINT COURSINF_courseName_NN NOT NULL,
city VARCHAR2(30)
CONSTRAINT COURSINF_city_NN NOT NULL,
postal_code CHAR(6)
--- CHECK CONSTRAINT: postal_code format must be L9L9L9 where L is a letter and 9 is a digit ---
CONSTRAINT COURSINF_postalCode_CK CHECK (REGEXP_LIKE(postal_code, '^([A-Za-z][0-9]){3}$'))
CONSTRAINT COURSINF_postalCode_NN NOT NULL,
country VARCHAR2(10)
CONSTRAINT COURSINF_country_NN NOT NULL,
average_rating NUMBER(1,0)
--- CHECK CONSTRAINT: average_rating must be a whole number and 1-5 ---
CONSTRAINT COURSINF_averageRating_CK CHECK (average_rating >= 1 AND average_rating <= 5 AND trunc(average_rating) = average_rating)
CONSTRAINT COURSINF_averageRating_NN NOT NULL,
description VARCHAR2(100)
CONSTRAINT COURSINF_description_NN NOT NULL,
length NUMBER(5)
CONSTRAINT COURSINF_length_NN NOT NULL,
year_built NUMBER(4)
CONSTRAINT COURSINF_yearBuilt_NN NOT NULL
);

CREATE TABLE TEE_TIMES(
tee_time DATE DEFAULT SYSDATE PRIMARY KEY
CONSTRAINT TTIME_teeTime_NN NOT NULL,
course_ID NUMBER(10)
CONSTRAINT COURSINF_TTIME_courseId_FK REFERENCES COURSE_INFORMATION(course_id)
CONSTRAINT TTIME_courseiD_NN NOT NULL,
price NUMBER(5,2)
CONSTRAINT TTIME_price_NN NOT NULL,
has_Cart CHAR(1)
--- CHECK CONSTRAINT: has_cart must be N for no or Y for yes ---
CONSTRAINT TTIME_hasCart_CK CHECK (has_Cart IN ('N','Y'))
CONSTRAINT TTIME_hasCart_NN NOT NULL,
holes NUMBER(2)
--- CHECK CONSTRAINT: holes column has to be 9 or 18 ---
CONSTRAINT TTIME_holes_CK CHECK (holes IN (9,18))
CONSTRAINT TTIME_holes_NN NOT NULL,
available_slots VARCHAR2(2)
CONSTRAINT TTIME_availableSlots_NN NOT NULL
);

CREATE TABLE CUSTOMER(
customer_Id NUMBER(10) PRIMARY KEY
CONSTRAINT CUSTOMER_customerId_NN NOT NULL,
favorite_course_id NUMBER(10)
CONSTRAINT CUSTOMER_favCourseId_NN NOT NULL,
email_address VARCHAR2(60)
--- CHECK constraint: email_address must contain @ symbol ---
CONSTRAINT CUSTOMER_emailAddress_CK CHECK (email_address LIKE '%@%')
CONSTRAINT CUSTOMER_emailAddress_NN NOT NULL,
first_name VARCHAR2(10)
CONSTRAINT CUSTOMER_firstName_NN NOT NULL,
last_name VARCHAR2(10)
CONSTRAINT CUSTOMER_lastName_NN NOT NULL,
gift_card_credit NUMBER(4)
CONSTRAINT CUSTOMER_giftCardCredit_NN NOT NULL,
amount_of_cards NUMBER(2)
CONSTRAINT CUSTOMER_amountOfCards_NN NOT NULL
);

CREATE TABLE CREDIT_CARD(
card_number NUMBER(16) PRIMARY KEY
CONSTRAINT CCARD_customerFirsName_NN NOT NULL,
customer_id NUMBER(10)
CONSTRAINT CCARD_customerId_FK REFERENCES CUSTOMER(customer_Id)
CONSTRAINT CCARD_customerId_NN NOT NULL,
name_on_card VARCHAR2(20)
CONSTRAINT CCARD_nameOnCard_NN NOT NULL,
expiration_date NUMBER(4)
CONSTRAINT CCARD_expirationDate_NN NOT NULL,
default_card NUMBER(1)
--- CHECK CONSTRAINT: default_card must be 1 or 0 ---
CONSTRAINT CCARD_defaultCard_CK CHECK(default_card IN(1,0))
CONSTRAINT CCARD_defaultCard_NN NOT NULL
);

CREATE TABLE RESERVATION(
reservation_id NUMBER(10) PRIMARY KEY
CONSTRAINT RESERVE_reservationId_NN NOT NULL,
customer_Id NUMBER(10)
CONSTRAINT CUSTOMER_RESERVE_customerId_FK REFERENCES CUSTOMER(customer_Id)
CONSTRAINT customerId_NN NOT NULL,
tee_time DATE DEFAULT SYSDATE
CONSTRAINT TEETIME_RESERVE_teeTime_FK REFERENCES TEE_TIMES(tee_time)
CONSTRAINT teeTime_NN NOT NULL,
players NUMBER(1)
CONSTRAINT RESERVE_players_NN NOT NULL,
green_fees_paid NUMBER(5)
CONSTRAINT RESERVE_greenFees_paid_NN NOT NULL,
tax_paid NUMBER(5)
CONSTRAINT RESERVE_taxPaid_NN NOT NULL,
amount_charged NUMBER(5)
CONSTRAINT RESERVE_amountCharged_NN NOT NULL
);

CREATE TABLE CUSTOMER_REVIEW(
review_id NUMBER(10) PRIMARY KEY
CONSTRAINT CREVIEW_reviewId_NN NOT NULL,
course_Id NUMBER(10)
CONSTRAINT COURSEINFORMATION_CREVIEW_courseId_FK REFERENCES COURSE_INFORMATION(course_id)
CONSTRAINT CREVIEW_courseId_NN NOT NULL,
customer_Id NUMBER(10)
CONSTRAINT CUSTOMER_CREVIEW_customerId_FK REFERENCES CUSTOMER(customer_Id)
CONSTRAINT CREVIEW_customerId_NN NOT NULL,
title VARCHAR2(50)
CONSTRAINT CREVIEW_title_NN NOT NULL,
comments VARCHAR2(200)
CONSTRAINT CREVIEW_comment_NN NOT NULL,
star_rating NUMBER(1,0)
--- CHECK CONSTRAINT: star_rating can only be whole numbers, 1-5 ---
CONSTRAINT CREVIEW_starRating_CK CHECK (star_rating >= 1 AND star_rating <= 5 AND trunc(star_rating) = star_rating)
CONSTRAINT CREVIEW_starRating_NN NOT NULL
);

CREATE TABLE PROMO_CODE(
pro_Code VARCHAR2(18) PRIMARY KEY
CONSTRAINT PROMO_proCode_NN NOT NULL,
rewards_id NUMBER(10)
CONSTRAINT PROMO_rewardsId_NN NOT NULL,
reservation_id NUMBER(10)
CONSTRAINT RESERVATION_PROMO_reservationId_FK REFERENCES RESERVATION(reservation_id)
CONSTRAINT PROMO_reservationId_NN NOT NULL,
is_used NUMBER(1)
--- CHECK CONSTRAINT: is_used can only be 0 or 1 ---
CONSTRAINT PROMO_isUsed_CK CHECK (is_used IN(0,1))
CONSTRAINT PROMO_isUsed_NN NOT NULL,
value NUMBER(4,2)
CONSTRAINT PROMO_value_NN NOT NULL,
date_issued DATE DEFAULT SYSDATE
CONSTRAINT PROMO_dateIssued_NN NOT NULL,
expiry_date NUMBER(4)
--- CHECK CONSTRAINT: expiry_date must be 4 digits, last 2 digits are 01-12 ---
CONSTRAINT PROMO_expiryDate_CK CHECK (REGEXP_LIKE (expiry_date, '^[0-9]{2}(0[1-9]|1[0-2])$'))
CONSTRAINT PROMO_expiryDate_NN NOT NULL
);

CREATE TABLE FOREEVER_REWARDS(
rewards_id NUMBER(10)
CONSTRAINT FREWARDS_rewardsId_NN NOT NULL,
customer_id NUMBER(10)
CONSTRAINT FREWARDS_customer_Id_NN NOT NULL,
promos_owned NUMBER(3)
CONSTRAINT FREWARDS_promosOwned_NN NOT NULL,
CONSTRAINT FREWARDS_rewardsId_PK PRIMARY KEY(rewards_id),
CONSTRAINT FREWARDS_customerId_FK FOREIGN KEY (customer_Id) REFERENCES CUSTOMER(customer_id)
);

ALTER TABLE PROMO_CODE
ADD CONSTRAINT REWARDS_PROMO_rewardsId_FK FOREIGN KEY(rewards_Id) REFERENCES FOREEVER_REWARDS(rewards_Id);

CREATE TABLE CUSTOMER_COURSE_BRIDGE(
customer_Id NUMBER(10)
CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_FK REFERENCES CUSTOMER(customer_Id),
course_Id NUMBER(10)
CONSTRAINT COURSE_CUSTCOURSEBRIDGE_FK REFERENCES COURSE_INFORMATION(course_Id),
CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_CustIdCourseId_PK PRIMARY KEY(customer_id, course_id));

CREATE TABLE CREDIT_RESERVATION_BRIDGE(
card_Number NUMBER(16),
reservation_Id NUMBER(10),
CONSTRAINT CRBRIDGE_CardNumberReserveId_PK PRIMARY KEY(card_number, reservation_id),
CONSTRAINT CRBRIDGE_CardNumber_FK FOREIGN KEY(card_number) REFERENCES CREDIT_CARD(card_number),
CONSTRAINT CRBRIDGE_ReserveId_FK FOREIGN KEY(reservation_id) REFERENCES RESERVATION(reservation_id));

ALTER TABLE CUSTOMER
ADD CONSTRAINT COURSEINF_CUSTOMER_courseId_FK FOREIGN KEY(favorite_course_id) REFERENCES COURSE_INFORMATION(course_Id);

------ DONE CREATING ALL TABLES WITH CONSTRAINTS ------