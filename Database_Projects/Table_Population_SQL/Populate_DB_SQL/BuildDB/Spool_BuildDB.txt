SQL> ALTER TABLE CUSTOMER DROP CONSTRAINT COURSEINF_CUSTOMER_courseId_FK;

Table CUSTOMER altered.

SQL> ALTER TABLE CREDIT_RESERVATION_BRIDGE DROP CONSTRAINT CRBRIDGE_ReserveId_FK;

Table CREDIT_RESERVATION_BRIDGE altered.

SQL> ALTER TABLE CREDIT_RESERVATION_BRIDGE DROP CONSTRAINT CRBRIDGE_CardNumber_FK;

Table CREDIT_RESERVATION_BRIDGE altered.

SQL> ALTER TABLE CUSTOMER_COURSE_BRIDGE DROP CONSTRAINT COURSE_CUSTCOURSEBRIDGE_FK;

Table CUSTOMER_COURSE_BRIDGE altered.

SQL> ALTER TABLE CUSTOMER_COURSE_BRIDGE DROP CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_FK;

Table CUSTOMER_COURSE_BRIDGE altered.

SQL> ALTER TABLE PROMO_CODE DROP CONSTRAINT REWARDS_PROMO_rewardsId_FK;

Table PROMO_CODE altered.

SQL> ALTER TABLE FOREEVER_REWARDS DROP CONSTRAINT FREWARDS_customerId_FK;

Table FOREEVER_REWARDS altered.

SQL> ALTER TABLE PROMO_CODE DROP CONSTRAINT RESERVATION_PROMO_reservationId_FK;

Table PROMO_CODE altered.

SQL> ALTER TABLE CUSTOMER_REVIEW DROP CONSTRAINT CUSTOMER_CREVIEW_customerId_FK;

Table CUSTOMER_REVIEW altered.

SQL> ALTER TABLE CUSTOMER_REVIEW DROP CONSTRAINT COURSEINFORMATION_CREVIEW_courseId_FK;

Table CUSTOMER_REVIEW altered.

SQL> ALTER TABLE RESERVATION DROP CONSTRAINT TEETIME_RESERVE_teeTime_FK;

Table RESERVATION altered.

SQL> ALTER TABLE RESERVATION DROP CONSTRAINT CUSTOMER_RESERVE_customerId_FK;

Table RESERVATION altered.

SQL> ALTER TABLE CREDIT_CARD DROP CONSTRAINT CCARD_customerId_FK;

Table CREDIT_CARD altered.

SQL> ALTER TABLE TEE_TIMES DROP CONSTRAINT COURSINF_TTIME_courseId_FK;

Table TEE_TIMES altered.

SQL> DROP TABLE FOREEVER_REWARDS;

Table FOREEVER_REWARDS dropped.

SQL> DROP TABLE PROMO_CODE;

Table PROMO_CODE dropped.

SQL> DROP TABLE CUSTOMER_REVIEW;

Table CUSTOMER_REVIEW dropped.

SQL> DROP TABLE CREDIT_RESERVATION_BRIDGE;

Table CREDIT_RESERVATION_BRIDGE dropped.

SQL> DROP TABLE RESERVATION;

Table RESERVATION dropped.

SQL> DROP TABLE CREDIT_CARD;

Table CREDIT_CARD dropped.

SQL> DROP TABLE CUSTOMER_COURSE_BRIDGE;

Table CUSTOMER_COURSE_BRIDGE dropped.

SQL> DROP TABLE CUSTOMER;

Table CUSTOMER dropped.

SQL> DROP TABLE TEE_TIMES;

Table TEE_TIMES dropped.

SQL> DROP TABLE COURSE_INFORMATION;

Table COURSE_INFORMATION dropped.

SQL> CREATE TABLE COURSE_INFORMATION(
  2  course_id NUMBER(10) PRIMARY KEY
  3  CONSTRAINT COURSINF_courseId_NN NOT NULL,
  4  course_name VARCHAR2(60)
  5  CONSTRAINT COURSINF_courseName_NN NOT NULL,
  6  city VARCHAR2(30)
  7  CONSTRAINT COURSINF_city_NN NOT NULL,
  8  postal_code CHAR(6)
  9  CONSTRAINT COURSINF_postalCode_NN NOT NULL,
 10  country VARCHAR2(10)
 11  CONSTRAINT COURSINF_country_NN NOT NULL,
 12  average_rating NUMBER(1,0)
 13  CONSTRAINT COURSINF_averageRating_CK CHECK (average_rating >= 1 AND average_rating <= 5)
 14  CONSTRAINT COURSINF_averageRating_NN NOT NULL,
 15  description VARCHAR2(100)
 16  CONSTRAINT COURSINF_description_NN NOT NULL,
 17  length NUMBER(5)
 18  CONSTRAINT COURSINF_length_NN NOT NULL,
 19  year_built NUMBER(4)
 20  CONSTRAINT COURSINF_yearBuilt_NN NOT NULL
 21  );

Table COURSE_INFORMATION created.

SQL> 
SQL> CREATE TABLE TEE_TIMES(
  2  tee_time DATE DEFAULT SYSDATE PRIMARY KEY
  3  CONSTRAINT TTIME_teeTime_NN NOT NULL,
  4  course_ID NUMBER(10)
  5  CONSTRAINT COURSINF_TTIME_courseId_FK REFERENCES COURSE_INFORMATION(course_id)
  6  CONSTRAINT TTIME_courseiD_NN NOT NULL,
  7  price NUMBER(5,2)
  8  CONSTRAINT TTIME_price_NN NOT NULL,
  9  has_Cart CHAR(1)
 10  CONSTRAINT TTIME_hasCart_CK CHECK (has_Cart IN ('N','Y'))
 11  CONSTRAINT TTIME_hasCart_NN NOT NULL,
 12  holes NUMBER(2)
 13  CONSTRAINT TTIME_holes_CK CHECK (holes IN (9,18))
 14  CONSTRAINT TTIME_holes_NN NOT NULL,
 15  available_slots VARCHAR2(2)
 16  CONSTRAINT TTIME_availableSlots_NN NOT NULL
 17  );

Table TEE_TIMES created.

SQL> 
SQL> CREATE TABLE CUSTOMER(
  2  customer_Id NUMBER(10) PRIMARY KEY
  3  CONSTRAINT CUSTOMER_customerId_NN NOT NULL,
  4  favorite_course_id NUMBER(10)
  5  CONSTRAINT CUSTOMER_favCourseId_NN NOT NULL,
  6  email_address VARCHAR2(60)
  7  CONSTRAINT CUSTOMER_emailAddress_CK CHECK (email_address LIKE '%@%')
  8  CONSTRAINT CUSTOMER_emailAddress_NN NOT NULL,
  9  first_name VARCHAR2(10)
 10  CONSTRAINT CUSTOMER_firstName_NN NOT NULL,
 11  last_name VARCHAR2(10)
 12  CONSTRAINT CUSTOMER_lastName_NN NOT NULL,
 13  gift_card_credit NUMBER(4)
 14  CONSTRAINT CUSTOMER_giftCardCredit_NN NOT NULL,
 15  amount_of_cards NUMBER(2)
 16  CONSTRAINT CUSTOMER_amountOfCards_NN NOT NULL
 17  );

Table CUSTOMER created.

SQL> 
SQL> CREATE TABLE CREDIT_CARD(
  2  card_number NUMBER(16) PRIMARY KEY
  3  CONSTRAINT CCARD_customerFirsName_NN NOT NULL,
  4  customer_id NUMBER(10)
  5  CONSTRAINT CCARD_customerId_FK REFERENCES CUSTOMER(customer_Id)
  6  CONSTRAINT CCARD_customerId_NN NOT NULL,
  7  name_on_card VARCHAR2(20)
  8  CONSTRAINT CCARD_nameOnCard_NN NOT NULL,
  9  expiration_date NUMBER(4)
 10  CONSTRAINT CCARD_expirationDate_NN NOT NULL,
 11  default_card NUMBER(1)
 12  CONSTRAINT CCARD_defaultCard_CK CHECK(default_card IN(1,0))
 13  CONSTRAINT CCARD_defaultCard_NN NOT NULL
 14  );

Table CREDIT_CARD created.

SQL> 
SQL> CREATE TABLE RESERVATION(
  2  reservation_id NUMBER(10) PRIMARY KEY
  3  CONSTRAINT RESERVE_reservationId_NN NOT NULL,
  4  customer_Id NUMBER(10)
  5  CONSTRAINT CUSTOMER_RESERVE_customerId_FK REFERENCES CUSTOMER(customer_Id)
  6  CONSTRAINT customerId_NN NOT NULL,
  7  tee_time DATE DEFAULT SYSDATE
  8  CONSTRAINT TEETIME_RESERVE_teeTime_FK REFERENCES TEE_TIMES(tee_time)
  9  CONSTRAINT teeTime_NN NOT NULL,
 10  players NUMBER(1)
 11  CONSTRAINT RESERVE_players_NN NOT NULL,
 12  green_fees_paid NUMBER(5)
 13  CONSTRAINT RESERVE_greenFees_paid_NN NOT NULL,
 14  tax_paid NUMBER(5)
 15  CONSTRAINT RESERVE_taxPaid_NN NOT NULL,
 16  amount_charged NUMBER(5)
 17  CONSTRAINT RESERVE_amountCharged_NN NOT NULL
 18  );

Table RESERVATION created.

SQL> 
SQL> CREATE TABLE CUSTOMER_REVIEW(
  2  review_id NUMBER(10) PRIMARY KEY
  3  CONSTRAINT CREVIEW_reviewId_NN NOT NULL,
  4  course_Id NUMBER(10)
  5  CONSTRAINT COURSEINFORMATION_CREVIEW_courseId_FK REFERENCES COURSE_INFORMATION(course_id)
  6  CONSTRAINT CREVIEW_courseId_NN NOT NULL,
  7  customer_Id NUMBER(10)
  8  CONSTRAINT CUSTOMER_CREVIEW_customerId_FK REFERENCES CUSTOMER(customer_Id)
  9  CONSTRAINT CREVIEW_customerId_NN NOT NULL,
 10  title VARCHAR2(50)
 11  CONSTRAINT CREVIEW_title_NN NOT NULL,
 12  comments VARCHAR2(200)
 13  CONSTRAINT CREVIEW_comment_NN NOT NULL,
 14  star_rating NUMBER(1,0)
 15  CONSTRAINT CREVIEW_starRating_CK CHECK (star_rating >= 1 AND star_rating <= 5)
 16  CONSTRAINT CREVIEW_starRating_NN NOT NULL
 17  );

Table CUSTOMER_REVIEW created.

SQL> 
SQL> CREATE TABLE PROMO_CODE(
  2  pro_Code VARCHAR2(18) PRIMARY KEY
  3  CONSTRAINT PROMO_proCode_NN NOT NULL,
  4  rewards_id NUMBER(10)
  5  CONSTRAINT PROMO_rewardsId_NN NOT NULL,
  6  reservation_id NUMBER(10)
  7  CONSTRAINT RESERVATION_PROMO_reservationId_FK REFERENCES RESERVATION(reservation_id)
  8  CONSTRAINT PROMO_reservationId_NN NOT NULL,
  9  is_used NUMBER(1)
 10  CONSTRAINT PROMO_isUsed_CK CHECK (is_used IN(0,1))
 11  CONSTRAINT PROMO_isUsed_NN NOT NULL,
 12  value NUMBER(4,2)
 13  CONSTRAINT PROMO_value_NN NOT NULL,
 14  date_issued DATE DEFAULT SYSDATE
 15  CONSTRAINT PROMO_dateIssued_NN NOT NULL,
 16  expiry_date NUMBER(4)
 17  ---CONSTRAINT PROMO_expiryDate_CK CHECK (expiry_date IN ('[0-9][0-9]([1[0-2])|([0[0-9])'))
 18  CONSTRAINT PROMO_expiryDate_NN NOT NULL
 19  );

Table PROMO_CODE created.

SQL> 
SQL> CREATE TABLE FOREEVER_REWARDS(
  2  rewards_id NUMBER(10)
  3  CONSTRAINT FREWARDS_rewardsId_NN NOT NULL,
  4  customer_id NUMBER(10)
  5  CONSTRAINT FREWARDS_customer_Id_NN NOT NULL,
  6  promos_owned NUMBER(3)
  7  CONSTRAINT FREWARDS_promosOwned_NN NOT NULL,
  8  CONSTRAINT FREWARDS_rewardsId_PK PRIMARY KEY(rewards_id),
  9  CONSTRAINT FREWARDS_customerId_FK FOREIGN KEY (customer_Id) REFERENCES CUSTOMER(customer_id)
 10  );

Table FOREEVER_REWARDS created.

SQL> 
SQL> ALTER TABLE PROMO_CODE
  2  ADD CONSTRAINT REWARDS_PROMO_rewardsId_FK FOREIGN KEY(rewards_Id) REFERENCES FOREEVER_REWARDS(rewards_Id);

Table PROMO_CODE altered.

SQL> 
SQL> CREATE TABLE CUSTOMER_COURSE_BRIDGE(
  2  customer_Id NUMBER(10)
  3  CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_FK REFERENCES CUSTOMER(customer_Id),
  4  course_Id NUMBER(10)
  5  CONSTRAINT COURSE_CUSTCOURSEBRIDGE_FK REFERENCES COURSE_INFORMATION(course_Id),
  6  CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_CustIdCourseId_PK PRIMARY KEY(customer_id, course_id));

Table CUSTOMER_COURSE_BRIDGE created.

SQL> 
SQL> CREATE TABLE CREDIT_RESERVATION_BRIDGE(
  2  card_Number NUMBER(16),
  3  reservation_Id NUMBER(10),
  4  CONSTRAINT CRBRIDGE_CardNumberReserveId_PK PRIMARY KEY(card_number, reservation_id),
  5  CONSTRAINT CRBRIDGE_CardNumber_FK FOREIGN KEY(card_number) REFERENCES CREDIT_CARD(card_number),
  6  CONSTRAINT CRBRIDGE_ReserveId_FK FOREIGN KEY(reservation_id) REFERENCES RESERVATION(reservation_id));

Table CREDIT_RESERVATION_BRIDGE created.

SQL> 
SQL> ALTER TABLE CUSTOMER
  2  ADD CONSTRAINT COURSEINF_CUSTOMER_courseId_FK FOREIGN KEY(favorite_course_id) REFERENCES COURSE_INFORMATION(course_Id);

Table CUSTOMER altered.

SQL> set echo on
SQL> 
SQL> ALTER TABLE CUSTOMER DROP CONSTRAINT COURSEINF_CUSTOMER_courseId_FK;

Table CUSTOMER altered.

SQL> ALTER TABLE CREDIT_RESERVATION_BRIDGE DROP CONSTRAINT CRBRIDGE_ReserveId_FK;

Table CREDIT_RESERVATION_BRIDGE altered.

SQL> ALTER TABLE CREDIT_RESERVATION_BRIDGE DROP CONSTRAINT CRBRIDGE_CardNumber_FK;

Table CREDIT_RESERVATION_BRIDGE altered.

SQL> ALTER TABLE CUSTOMER_COURSE_BRIDGE DROP CONSTRAINT COURSE_CUSTCOURSEBRIDGE_FK;

Table CUSTOMER_COURSE_BRIDGE altered.

SQL> ALTER TABLE CUSTOMER_COURSE_BRIDGE DROP CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_FK;

Table CUSTOMER_COURSE_BRIDGE altered.

SQL> ALTER TABLE PROMO_CODE DROP CONSTRAINT REWARDS_PROMO_rewardsId_FK;

Table PROMO_CODE altered.

SQL> ALTER TABLE FOREEVER_REWARDS DROP CONSTRAINT FREWARDS_customerId_FK;

Table FOREEVER_REWARDS altered.

SQL> ALTER TABLE PROMO_CODE DROP CONSTRAINT RESERVATION_PROMO_reservationId_FK;

Table PROMO_CODE altered.

SQL> ALTER TABLE CUSTOMER_REVIEW DROP CONSTRAINT CUSTOMER_CREVIEW_customerId_FK;

Table CUSTOMER_REVIEW altered.

SQL> ALTER TABLE CUSTOMER_REVIEW DROP CONSTRAINT COURSEINFORMATION_CREVIEW_courseId_FK;

Table CUSTOMER_REVIEW altered.

SQL> ALTER TABLE RESERVATION DROP CONSTRAINT TEETIME_RESERVE_teeTime_FK;

Table RESERVATION altered.

SQL> ALTER TABLE RESERVATION DROP CONSTRAINT CUSTOMER_RESERVE_customerId_FK;

Table RESERVATION altered.

SQL> ALTER TABLE CREDIT_CARD DROP CONSTRAINT CCARD_customerId_FK;

Table CREDIT_CARD altered.

SQL> ALTER TABLE TEE_TIMES DROP CONSTRAINT COURSINF_TTIME_courseId_FK;

Table TEE_TIMES altered.

SQL> 
SQL> DROP TABLE FOREEVER_REWARDS;

Table FOREEVER_REWARDS dropped.

SQL> DROP TABLE PROMO_CODE;

Table PROMO_CODE dropped.

SQL> DROP TABLE CUSTOMER_REVIEW;

Table CUSTOMER_REVIEW dropped.

SQL> DROP TABLE CREDIT_RESERVATION_BRIDGE;

Table CREDIT_RESERVATION_BRIDGE dropped.

SQL> DROP TABLE RESERVATION;

Table RESERVATION dropped.

SQL> DROP TABLE CREDIT_CARD;

Table CREDIT_CARD dropped.

SQL> DROP TABLE CUSTOMER_COURSE_BRIDGE;

Table CUSTOMER_COURSE_BRIDGE dropped.

SQL> DROP TABLE CUSTOMER;

Table CUSTOMER dropped.

SQL> DROP TABLE TEE_TIMES;

Table TEE_TIMES dropped.

SQL> DROP TABLE COURSE_INFORMATION;

Table COURSE_INFORMATION dropped.

SQL> set echo on
SQL> 
SQL> CREATE TABLE COURSE_INFORMATION(
  2  course_id NUMBER(10) PRIMARY KEY
  3  CONSTRAINT COURSINF_courseId_NN NOT NULL,
  4  course_name VARCHAR2(60)
  5  CONSTRAINT COURSINF_courseName_NN NOT NULL,
  6  city VARCHAR2(30)
  7  CONSTRAINT COURSINF_city_NN NOT NULL,
  8  postal_code CHAR(6)
  9  CONSTRAINT COURSINF_postalCode_NN NOT NULL,
 10  country VARCHAR2(10)
 11  CONSTRAINT COURSINF_country_NN NOT NULL,
 12  average_rating NUMBER(1,0)
 13  CONSTRAINT COURSINF_averageRating_CK CHECK (average_rating >= 1 AND average_rating <= 5)
 14  CONSTRAINT COURSINF_averageRating_NN NOT NULL,
 15  description VARCHAR2(100)
 16  CONSTRAINT COURSINF_description_NN NOT NULL,
 17  length NUMBER(5)
 18  CONSTRAINT COURSINF_length_NN NOT NULL,
 19  year_built NUMBER(4)
 20  CONSTRAINT COURSINF_yearBuilt_NN NOT NULL
 21  );

Table COURSE_INFORMATION created.

SQL> 
SQL> CREATE TABLE TEE_TIMES(
  2  tee_time DATE DEFAULT SYSDATE PRIMARY KEY
  3  CONSTRAINT TTIME_teeTime_NN NOT NULL,
  4  course_ID NUMBER(10)
  5  CONSTRAINT COURSINF_TTIME_courseId_FK REFERENCES COURSE_INFORMATION(course_id)
  6  CONSTRAINT TTIME_courseiD_NN NOT NULL,
  7  price NUMBER(5,2)
  8  CONSTRAINT TTIME_price_NN NOT NULL,
  9  has_Cart CHAR(1)
 10  CONSTRAINT TTIME_hasCart_CK CHECK (has_Cart IN ('N','Y'))
 11  CONSTRAINT TTIME_hasCart_NN NOT NULL,
 12  holes NUMBER(2)
 13  CONSTRAINT TTIME_holes_CK CHECK (holes IN (9,18))
 14  CONSTRAINT TTIME_holes_NN NOT NULL,
 15  available_slots VARCHAR2(2)
 16  CONSTRAINT TTIME_availableSlots_NN NOT NULL
 17  );

Table TEE_TIMES created.

SQL> 
SQL> CREATE TABLE CUSTOMER(
  2  customer_Id NUMBER(10) PRIMARY KEY
  3  CONSTRAINT CUSTOMER_customerId_NN NOT NULL,
  4  favorite_course_id NUMBER(10)
  5  CONSTRAINT CUSTOMER_favCourseId_NN NOT NULL,
  6  email_address VARCHAR2(60)
  7  CONSTRAINT CUSTOMER_emailAddress_CK CHECK (email_address LIKE '%@%')
  8  CONSTRAINT CUSTOMER_emailAddress_NN NOT NULL,
  9  first_name VARCHAR2(10)
 10  CONSTRAINT CUSTOMER_firstName_NN NOT NULL,
 11  last_name VARCHAR2(10)
 12  CONSTRAINT CUSTOMER_lastName_NN NOT NULL,
 13  gift_card_credit NUMBER(4)
 14  CONSTRAINT CUSTOMER_giftCardCredit_NN NOT NULL,
 15  amount_of_cards NUMBER(2)
 16  CONSTRAINT CUSTOMER_amountOfCards_NN NOT NULL
 17  );

Table CUSTOMER created.

SQL> 
SQL> CREATE TABLE CREDIT_CARD(
  2  card_number NUMBER(16) PRIMARY KEY
  3  CONSTRAINT CCARD_customerFirsName_NN NOT NULL,
  4  customer_id NUMBER(10)
  5  CONSTRAINT CCARD_customerId_FK REFERENCES CUSTOMER(customer_Id)
  6  CONSTRAINT CCARD_customerId_NN NOT NULL,
  7  name_on_card VARCHAR2(20)
  8  CONSTRAINT CCARD_nameOnCard_NN NOT NULL,
  9  expiration_date NUMBER(4)
 10  CONSTRAINT CCARD_expirationDate_NN NOT NULL,
 11  default_card NUMBER(1)
 12  CONSTRAINT CCARD_defaultCard_CK CHECK(default_card IN(1,0))
 13  CONSTRAINT CCARD_defaultCard_NN NOT NULL
 14  );

Table CREDIT_CARD created.

SQL> 
SQL> CREATE TABLE RESERVATION(
  2  reservation_id NUMBER(10) PRIMARY KEY
  3  CONSTRAINT RESERVE_reservationId_NN NOT NULL,
  4  customer_Id NUMBER(10)
  5  CONSTRAINT CUSTOMER_RESERVE_customerId_FK REFERENCES CUSTOMER(customer_Id)
  6  CONSTRAINT customerId_NN NOT NULL,
  7  tee_time DATE DEFAULT SYSDATE
  8  CONSTRAINT TEETIME_RESERVE_teeTime_FK REFERENCES TEE_TIMES(tee_time)
  9  CONSTRAINT teeTime_NN NOT NULL,
 10  players NUMBER(1)
 11  CONSTRAINT RESERVE_players_NN NOT NULL,
 12  green_fees_paid NUMBER(5)
 13  CONSTRAINT RESERVE_greenFees_paid_NN NOT NULL,
 14  tax_paid NUMBER(5)
 15  CONSTRAINT RESERVE_taxPaid_NN NOT NULL,
 16  amount_charged NUMBER(5)
 17  CONSTRAINT RESERVE_amountCharged_NN NOT NULL
 18  );

Table RESERVATION created.

SQL> 
SQL> CREATE TABLE CUSTOMER_REVIEW(
  2  review_id NUMBER(10) PRIMARY KEY
  3  CONSTRAINT CREVIEW_reviewId_NN NOT NULL,
  4  course_Id NUMBER(10)
  5  CONSTRAINT COURSEINFORMATION_CREVIEW_courseId_FK REFERENCES COURSE_INFORMATION(course_id)
  6  CONSTRAINT CREVIEW_courseId_NN NOT NULL,
  7  customer_Id NUMBER(10)
  8  CONSTRAINT CUSTOMER_CREVIEW_customerId_FK REFERENCES CUSTOMER(customer_Id)
  9  CONSTRAINT CREVIEW_customerId_NN NOT NULL,
 10  title VARCHAR2(50)
 11  CONSTRAINT CREVIEW_title_NN NOT NULL,
 12  comments VARCHAR2(200)
 13  CONSTRAINT CREVIEW_comment_NN NOT NULL,
 14  star_rating NUMBER(1,0)
 15  CONSTRAINT CREVIEW_starRating_CK CHECK (star_rating >= 1 AND star_rating <= 5)
 16  CONSTRAINT CREVIEW_starRating_NN NOT NULL
 17  );

Table CUSTOMER_REVIEW created.

SQL> 
SQL> CREATE TABLE PROMO_CODE(
  2  pro_Code VARCHAR2(18) PRIMARY KEY
  3  CONSTRAINT PROMO_proCode_NN NOT NULL,
  4  rewards_id NUMBER(10)
  5  CONSTRAINT PROMO_rewardsId_NN NOT NULL,
  6  reservation_id NUMBER(10)
  7  CONSTRAINT RESERVATION_PROMO_reservationId_FK REFERENCES RESERVATION(reservation_id)
  8  CONSTRAINT PROMO_reservationId_NN NOT NULL,
  9  is_used NUMBER(1)
 10  CONSTRAINT PROMO_isUsed_CK CHECK (is_used IN(0,1))
 11  CONSTRAINT PROMO_isUsed_NN NOT NULL,
 12  value NUMBER(4,2)
 13  CONSTRAINT PROMO_value_NN NOT NULL,
 14  date_issued DATE DEFAULT SYSDATE
 15  CONSTRAINT PROMO_dateIssued_NN NOT NULL,
 16  expiry_date NUMBER(4)
 17  ---CONSTRAINT PROMO_expiryDate_CK CHECK (expiry_date IN ('[0-9][0-9]([1[0-2])|([0[0-9])'))
 18  CONSTRAINT PROMO_expiryDate_NN NOT NULL
 19  );

Table PROMO_CODE created.

SQL> 
SQL> CREATE TABLE FOREEVER_REWARDS(
  2  rewards_id NUMBER(10)
  3  CONSTRAINT FREWARDS_rewardsId_NN NOT NULL,
  4  customer_id NUMBER(10)
  5  CONSTRAINT FREWARDS_customer_Id_NN NOT NULL,
  6  promos_owned NUMBER(3)
  7  CONSTRAINT FREWARDS_promosOwned_NN NOT NULL,
  8  CONSTRAINT FREWARDS_rewardsId_PK PRIMARY KEY(rewards_id),
  9  CONSTRAINT FREWARDS_customerId_FK FOREIGN KEY (customer_Id) REFERENCES CUSTOMER(customer_id)
 10  );

Table FOREEVER_REWARDS created.

SQL> 
SQL> ALTER TABLE PROMO_CODE
  2  ADD CONSTRAINT REWARDS_PROMO_rewardsId_FK FOREIGN KEY(rewards_Id) REFERENCES FOREEVER_REWARDS(rewards_Id);

Table PROMO_CODE altered.

SQL> 
SQL> CREATE TABLE CUSTOMER_COURSE_BRIDGE(
  2  customer_Id NUMBER(10)
  3  CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_FK REFERENCES CUSTOMER(customer_Id),
  4  course_Id NUMBER(10)
  5  CONSTRAINT COURSE_CUSTCOURSEBRIDGE_FK REFERENCES COURSE_INFORMATION(course_Id),
  6  CONSTRAINT CUSTOMER_CUSTCOURSEBRIDGE_CustIdCourseId_PK PRIMARY KEY(customer_id, course_id));

Table CUSTOMER_COURSE_BRIDGE created.

SQL> 
SQL> CREATE TABLE CREDIT_RESERVATION_BRIDGE(
  2  card_Number NUMBER(16),
  3  reservation_Id NUMBER(10),
  4  CONSTRAINT CRBRIDGE_CardNumberReserveId_PK PRIMARY KEY(card_number, reservation_id),
  5  CONSTRAINT CRBRIDGE_CardNumber_FK FOREIGN KEY(card_number) REFERENCES CREDIT_CARD(card_number),
  6  CONSTRAINT CRBRIDGE_ReserveId_FK FOREIGN KEY(reservation_id) REFERENCES RESERVATION(reservation_id));

Table CREDIT_RESERVATION_BRIDGE created.

SQL> 
SQL> ALTER TABLE CUSTOMER
  2  ADD CONSTRAINT COURSEINF_CUSTOMER_courseId_FK FOREIGN KEY(favorite_course_id) REFERENCES COURSE_INFORMATION(course_Id);

Table CUSTOMER altered.

